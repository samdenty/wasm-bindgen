(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./pkg/index.js":
/*!**********************!*\
  !*** ./pkg/index.js ***!
  \**********************/
/*! exports provided: FmOsc, __wbindgen_object_drop_ref, __widl_f_new_AudioContext, __widl_f_close_AudioContext, __widl_f_create_gain_AudioContext, __widl_f_create_oscillator_AudioContext, __widl_f_destination_AudioContext, __widl_f_connect_with_audio_node_AudioNode, __widl_f_connect_with_audio_param_AudioNode, __widl_f_value_AudioParam, __widl_f_set_value_AudioParam, __widl_f_gain_GainNode, __widl_f_set_type_OscillatorNode, __widl_f_frequency_OscillatorNode, __widl_f_start_OscillatorNode, __wbindgen_string_new, __wbindgen_throw, __wbindgen_rethrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(TextDecoder) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FmOsc\", function() { return FmOsc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_new_AudioContext\", function() { return __widl_f_new_AudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_close_AudioContext\", function() { return __widl_f_close_AudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_create_gain_AudioContext\", function() { return __widl_f_create_gain_AudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_create_oscillator_AudioContext\", function() { return __widl_f_create_oscillator_AudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_destination_AudioContext\", function() { return __widl_f_destination_AudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_connect_with_audio_node_AudioNode\", function() { return __widl_f_connect_with_audio_node_AudioNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_connect_with_audio_param_AudioNode\", function() { return __widl_f_connect_with_audio_param_AudioNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_value_AudioParam\", function() { return __widl_f_value_AudioParam; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_set_value_AudioParam\", function() { return __widl_f_set_value_AudioParam; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_gain_GainNode\", function() { return __widl_f_gain_GainNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_set_type_OscillatorNode\", function() { return __widl_f_set_type_OscillatorNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_frequency_OscillatorNode\", function() { return __widl_f_frequency_OscillatorNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_start_OscillatorNode\", function() { return __widl_f_start_OscillatorNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_rethrow\", function() { return __wbindgen_rethrow; });\n/* harmony import */ var _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index_bg.wasm */ \"./pkg/index_bg.wasm\");\n\n\nconst lAudioContext = (typeof AudioContext !== 'undefined' ? AudioContext : webkitAudioContext);\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(e) {\n    _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_exn_store\"](addHeapObject(e));\n}\n\nfunction logError(e) {\n    let error = (function () {\n        try {\n            return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n        } catch(_) {\n            return \"<failed to stringify thrown value>\";\n        }\n    }());\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n    throw e;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n*/\nclass FmOsc {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FmOsc.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_fmosc_free\"](ptr);\n    }\n    /**\n    * @returns {FmOsc}\n    */\n    constructor() {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"fmosc_new\"]();\n        return FmOsc.__wrap(ret);\n    }\n    /**\n    * Sets the gain for this oscillator, between 0.0 and 1.0.\n    * @param {number} gain\n    */\n    set_gain(gain) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(gain);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"fmosc_set_gain\"](this.ptr, gain);\n    }\n    /**\n    * @param {number} freq\n    */\n    set_primary_frequency(freq) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(freq);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"fmosc_set_primary_frequency\"](this.ptr, freq);\n    }\n    /**\n    * @param {number} note\n    */\n    set_note(note) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(note);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"fmosc_set_note\"](this.ptr, note);\n    }\n    /**\n    * This should be between 0 and 1, though higher values are accepted.\n    * @param {number} amt\n    */\n    set_fm_amount(amt) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(amt);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"fmosc_set_fm_amount\"](this.ptr, amt);\n    }\n    /**\n    * This should be between 0 and 1, though higher values are accepted.\n    * @param {number} amt\n    */\n    set_fm_frequency(amt) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(amt);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"fmosc_set_fm_frequency\"](this.ptr, amt);\n    }\n}\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __widl_f_new_AudioContext = function() {\n    try {\n        try {\n            const ret = new lAudioContext();\n            return addHeapObject(ret);\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_close_AudioContext = function(arg0) {\n    try {\n        try {\n            const ret = getObject(arg0).close();\n            return addHeapObject(ret);\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_create_gain_AudioContext = function(arg0) {\n    try {\n        try {\n            const ret = getObject(arg0).createGain();\n            return addHeapObject(ret);\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_create_oscillator_AudioContext = function(arg0) {\n    try {\n        try {\n            const ret = getObject(arg0).createOscillator();\n            return addHeapObject(ret);\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_destination_AudioContext = function(arg0) {\n    try {\n        const ret = getObject(arg0).destination;\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_connect_with_audio_node_AudioNode = function(arg0, arg1) {\n    try {\n        try {\n            const ret = getObject(arg0).connect(getObject(arg1));\n            return addHeapObject(ret);\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_connect_with_audio_param_AudioNode = function(arg0, arg1) {\n    try {\n        try {\n            getObject(arg0).connect(getObject(arg1));\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_value_AudioParam = function(arg0) {\n    try {\n        const ret = getObject(arg0).value;\n        _assertNum(ret);\n        return ret;\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_set_value_AudioParam = function(arg0, arg1) {\n    try {\n        getObject(arg0).value = arg1;\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_gain_GainNode = function(arg0) {\n    try {\n        const ret = getObject(arg0).gain;\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_set_type_OscillatorNode = function(arg0, arg1) {\n    try {\n        getObject(arg0).type = takeObject(arg1);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_frequency_OscillatorNode = function(arg0) {\n    try {\n        const ret = getObject(arg0).frequency;\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __widl_f_start_OscillatorNode = function(arg0) {\n    try {\n        try {\n            getObject(arg0).start();\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\nconst __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! text-encoding */ \"../../node_modules/text-encoding/index.js\")[\"TextDecoder\"]))\n\n//# sourceURL=webpack:///./pkg/index.js?");

/***/ }),

/***/ "./pkg/index_bg.wasm":
/*!***************************!*\
  !*** ./pkg/index_bg.wasm ***!
  \***************************/
/*! exports provided: memory, __rustc_debug_gdb_scripts_section__, __wbg_fmosc_free, fmosc_new, fmosc_set_gain, fmosc_set_primary_frequency, fmosc_set_note, fmosc_set_fm_amount, fmosc_set_fm_frequency, __wbindgen_exn_store */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./index.js */ \"./pkg/index.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./pkg/index_bg.wasm?");

/***/ })

}]);